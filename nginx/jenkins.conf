
limit_conn_zone $binary_remote_addr zone=addr:10m;
limit_req_zone $binary_remote_addr zone=req:10m rate=10r/s;

server {
    listen 80 default_server;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name jenkins.climateprediction.xyz;

    ssl_certificate /etc/letsencrypt/live/climateprediction.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/climateprediction.xyz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;

    limit_conn addr 10;
    
    limit_req zone=req burst=20 nodelay;

    location / {
        try_files $uri @jenkins;
    }

    location @jenkins {
        resolver 127.0.0.11 valid=30s;
        set $service "jenkins:8080";

        proxy_pass http://$service;
        proxy_redirect off;

        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_buffering off;
        add_header 'X-SSH-Endpoint' 'jenkins.climateprediction.xyz' always;

        proxy_intercept_errors on;
        error_page 502 = /502.html;
    }

    location = /502.html {
        internal;
        root /usr/share/nginx/html;
    }
}

server {
    listen 443 ssl;
    server_name climateprediction.xyz www.climateprediction.xyz api.climateprediction.xyz;

    limit_conn addr 10;

    limit_req zone=req burst=20 nodelay;

    location / {
        try_files $uri @frontend;
    }

    location @frontend {
        resolver 127.0.0.11 valid=30s;
        set $service "frontend:443";
        
        proxy_pass https://$service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_intercept_errors on;
        error_page 502 = /502.html;
    }

    location = /502.html {
        internal;
        root /usr/share/nginx/html;
    }
}

server {
    listen 80;
    listen 443 ssl;
    server_name _;

    root /usr/share/nginx/html;

    limit_conn addr 10;

    limit_req zone=req burst=20 nodelay;

    location /502.html {
        internal;
    }
}