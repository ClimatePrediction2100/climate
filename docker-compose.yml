version: '3.8'

services:
  frontend:
    container_name: climate-frontend
    image: climate-frontend
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - 80:80
      - 443:443
    networks:
      - climate
    volumes:
      - type: volume
        source: climate
        target: /usr/climate
      - type: volume
        source: certbot_conf
        target: /etc/letsencrypt
      - type: volume
        source: certbot_www
        target: /var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    deploy:
      placement:
        constraints:
          - node.role == worker

  backend:
    container_name: climate-backend
    image: climate-backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    networks:
      - climate
    volumes:
      - type: volume
        source: climate
        target: /usr/climate
    deploy:
      placement:
        constraints:
          - node.role == worker

  certbot:
    container_name: climate-certbot
    image: certbot/certbot:v1.7.0
    volumes:
      - type: volume
        source: certbot_conf
        target: /etc/letsencrypt
      - type: volume
        source: certbot_www
        target: /var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    deploy:
      placement:
        constraints:
          - node.role == worker

networks:
  climate:
    driver: overlay

volumes:
  climate:
    driver: local

  certbot_conf:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=climateprediction.xyz,nolock,soft,rw
      device: ":data/certbot/conf"

  certbot_www:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=climateprediction.xyz,nolock,soft,rw
      device: ":data/certbot/www"